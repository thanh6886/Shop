{"version":3,"sources":["../src/withRouter.tsx","../src/components/StoryRouteTree.tsx","../src/components/RouterLogger.tsx","../src/constants.ts","../src/hooks/useNavigationEventBuilder.ts","../src/hooks/useCurrentUrl.ts","../src/hooks/useDeepRouteMatches.tsx","../src/contexts/DeepRouteMatches.tsx","../src/utils.ts","../src/components/StoryRouter.tsx","../src/hooks/useDataEventBuilder.ts"],"names":["React","makeDecorator","useState","Route","useEffect","useLayoutEffect","useRef","useLocation","addons","ADDON_ID","PANEL_ID","PARAM_KEY","EVENTS","useNavigationType","useParams","useSearchParams","useCurrentUrl","location","DeepRouteMatchesContext","useDeepRouteMatches","useNavigationEventBuilder","eventCount","params","search","navigationType","matches","searchParams","value","key","currentUrl","matchesData","routeMatch","eventName","eventData","generatePath","defer","deferred","resolve","reject","getFormDataSummary","formData","data","getHumanReadableBody","request","requestClone","contentTypeHeader","humanReadableBody","requestBodySize","b","RouterLogger","children","channel","loadedAt","setLoadedAt","loadedEventEmitted","setLoadedEventEmitted","lastEmittedRouteMatches","setLastEmittedRouteMatches","buildEventData","storyLoadedEmitted","id","UNSAFE_RouteContext","createMemoryRouter","createRoutesFromElements","RouterProvider","STORY_ARGS_UPDATED","StoryRouter","routePath","routeParams","routeState","userBrowserPath","hydrationData","router","setRouter","storyMutations","setStoryMutations","routeStateRef","prev","generatedPath","queryString","initialEntry","routes","memoryRouter","nextState","Fallback","useDataEventBuilder","eventArgs","context","requestData","StoryRouteTree","routeHandle","outlet","action","loader","errorElement","shouldRevalidate","routeId","deepRouteMatches","setDeepRouteMatches","target","p","v","currentMatches","outletConfig","isOutletProps","outletExpandProps","actionWrapper","loaderWrapper","test","createEventData","actionArgs","actionResult","loaderArgs","loaderResult","withRouter","story","parameters","browserPath"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {makeDecorator} from \"@storybook/preview-api\";\nimport {StoryRouteTree} from \"./components/StoryRouteTree\";\nimport {PARAM_KEY} from \"./constants\";\n\nexport const withRouter = makeDecorator({\n  name: \"withRouter\",\n  parameterName: PARAM_KEY,\n  wrapper: (story: (...args: any[]) => unknown, context, {parameters = {}} ) => {\n    const {\n      routePath = '*',\n      routeParams,\n      routeState,\n      routeHandle,\n      searchParams,\n      outlet,\n      browserPath,\n      loader,\n      action,\n      errorElement,\n      hydrationData,\n      shouldRevalidate,\n      routeId,\n    } = parameters;\n\n    if (typeof routePath !== 'string') throw new Error(\"React Router decorator : `path` must be a string\");\n    if (routeParams !== undefined && typeof routeParams !== 'object') throw new Error(\"React Router decorator : `params` must be an object with strings as values\");\n    if (searchParams !== undefined && typeof searchParams !== 'object') throw new Error(\"React Router decorator : `search` must be an object with strings as values\");\n\n    return (\n      <StoryRouteTree\n        browserPath={browserPath}\n        routePath={routePath}\n        routeParams={routeParams}\n        searchParams={searchParams}\n        routeState={routeState}\n        routeHandle={routeHandle}\n        outlet={outlet}\n        loader={loader}\n        action={action}\n        errorElement={errorElement}\n        hydrationData={hydrationData}\n        shouldRevalidate={shouldRevalidate}\n        routeId={routeId}\n      >\n        {story(context) as React.ReactNode}\n      </StoryRouteTree>\n    )\n  }\n})\n","import React, {useState} from \"react\";\nimport {ActionFunction, LoaderFunctionArgs, Route, RouteMatch, RouteProps} from \"react-router-dom\";\nimport {RouterLogger} from \"./RouterLogger\";\nimport {FCC} from \"../fixes\";\nimport {DeepRouteMatchesContext} from \"../contexts/DeepRouteMatches\";\nimport {UNSAFE_RouteContext} from \"react-router\";\nimport {StoryRouter} from \"./StoryRouter\";\nimport {HydrationState, LoaderFunction} from \"@remix-run/router\";\nimport {addons} from \"@storybook/preview-api\";\nimport {EVENTS} from \"../constants\";\nimport Channel from \"@storybook/channels\";\nimport {ActionFunctionArgs} from \"@remix-run/router/utils\";\nimport {useDataEventBuilder} from \"../hooks/useDataEventBuilder\";\n\ntype OutletProps = {\n  element: React.ReactNode;\n  path?: string;\n  handle?: unknown;\n  loader?: RouteProps['loader'];\n  action?: RouteProps['action'];\n  errorElement?: React.ReactNode | null;\n}\n\nexport type StoryRouterProps = {\n  browserPath?: string;\n  routePath?: string;\n  routeParams?: Record<string, string>;\n  routeHandle?: unknown;\n  searchParams?: ConstructorParameters<typeof URLSearchParams>[0];\n  routeState?: unknown;\n  outlet?: React.ReactNode | OutletProps;\n  hydrationData?: HydrationState;\n  loader?: RouteProps['loader'];\n  action?: RouteProps['action'];\n  errorElement?: React.ReactNode | null;\n  shouldRevalidate?: RouteProps['shouldRevalidate'];\n  routeId?: RouteProps['id'];\n};\n\ntype Ctx = {\n  _currentValue?: { matches: RouteMatch[] }\n};\n\nexport const StoryRouteTree: FCC<StoryRouterProps> = ({\n  children,\n  browserPath: userBrowserPath,\n  routePath = '*',\n  routeParams,\n  routeHandle,\n  searchParams,\n  routeState,\n  outlet,\n  hydrationData,\n  action,\n  loader,\n  errorElement,\n  shouldRevalidate,\n  routeId,\n}) => {\n  const channel = addons.getChannel();\n  const [deepRouteMatches, setDeepRouteMatches] = useState<RouteMatch[]>([]);\n\n  // @ts-ignore\n  UNSAFE_RouteContext.Provider._context = new Proxy(UNSAFE_RouteContext.Provider._context ?? {}, {\n    set(target: Ctx, p: keyof Ctx, v: Ctx[keyof Ctx]) {\n      if (p === '_currentValue') {\n        setDeepRouteMatches(currentMatches => {\n          if (v !== undefined && v.matches.length > currentMatches.length) {\n            return v.matches;\n          }\n          return currentMatches;\n        });\n      }\n\n      return Reflect.set(target, p, v);\n    },\n  });\n\n  const outletConfig: OutletProps = isOutletProps(outlet) ? outlet : {\n    element: outlet,\n  };\n\n  const outletExpandProps = {\n    element: outletConfig.element,\n    handle: outletConfig.handle,\n    errorElement: outletConfig.errorElement,\n    action: outletConfig.action !== undefined ? actionWrapper(channel, outletConfig.action) : undefined,\n    loader: outletConfig.loader !== undefined ? loaderWrapper(channel, outletConfig.loader) : undefined,\n  }\n\n  return (\n    <DeepRouteMatchesContext.Provider value={deepRouteMatches}>\n      <StoryRouter routePath={routePath} routeParams={routeParams} routeState={routeState} searchParams={searchParams}\n                   browserPath={userBrowserPath} hydrationData={hydrationData}>\n        <Route\n          id={routeId}\n          path={routePath}\n          handle={routeHandle}\n          action={action !== undefined ? actionWrapper(channel, action) : undefined}\n          loader={loader !== undefined ? loaderWrapper(channel, loader) : undefined}\n          shouldRevalidate={shouldRevalidate}\n          errorElement={errorElement}\n          element={\n            <RouterLogger>\n              {children}\n            </RouterLogger>\n          }\n        >\n          {outletConfig.element !== undefined && outletConfig.path === undefined && <Route index {...outletExpandProps} />}\n          {outletConfig.element !== undefined && <Route path={outletConfig.path} {...outletExpandProps} />}\n        </Route>\n      </StoryRouter>\n    </DeepRouteMatchesContext.Provider>\n  )\n}\n\nfunction isOutletProps(test: unknown): test is OutletProps {\n  return test !== null && typeof test === 'object' && Object.prototype.hasOwnProperty.call(test, 'element');\n}\n\nfunction actionWrapper(channel: Channel, action: ActionFunction): ActionFunction {\n  const createEventData = useDataEventBuilder();\n\n  return async function(actionArgs: ActionFunctionArgs) {\n    if (action === undefined) return;\n\n    channel.emit(EVENTS.ACTION_INVOKED, await createEventData(EVENTS.ACTION_INVOKED, actionArgs));\n    const actionResult = await action(actionArgs);\n    channel.emit(EVENTS.ACTION_SETTLED, await createEventData(EVENTS.ACTION_SETTLED, actionResult));\n\n    return actionResult;\n  }\n}\n\nfunction loaderWrapper(channel: Channel, loader: LoaderFunction): ActionFunction {\n  const createEventData = useDataEventBuilder();\n\n  return async function(loaderArgs: LoaderFunctionArgs) {\n    if (loader === undefined) return;\n\n    channel.emit(EVENTS.LOADER_INVOKED, await createEventData(EVENTS.LOADER_INVOKED, loaderArgs));\n    const loaderResult = await loader(loaderArgs);\n    channel.emit(EVENTS.LOADER_SETTLED, await createEventData(EVENTS.LOADER_SETTLED, loaderResult));\n\n    return loaderResult;\n  }\n}","import React, {useEffect, useLayoutEffect, useRef, useState} from \"react\";\nimport {Location, RouteMatch, useLocation} from \"react-router-dom\";\nimport {addons} from '@storybook/preview-api';\n\nimport {EVENTS} from \"../constants\";\nimport {useNavigationEventBuilder} from \"../hooks/useNavigationEventBuilder\";\nimport {FCC} from \"../fixes\";\nimport {useDeepRouteMatches} from \"../hooks/useDeepRouteMatches\";\nimport {defer} from \"../utils\";\n\nexport const RouterLogger: FCC = ({ children }) => {\n  const channel = addons.getChannel();\n  const location = useLocation();\n  const [loadedAt, setLoadedAt] = useState<Location>();\n  const [loadedEventEmitted, setLoadedEventEmitted] = useState(false);\n  const [lastEmittedRouteMatches, setLastEmittedRouteMatches] = useState<RouteMatch[]>([]);\n\n  const buildEventData = useNavigationEventBuilder();\n  const matches = useDeepRouteMatches();\n\n  const storyLoadedEmitted = useRef(defer());\n\n  useLayoutEffect(() => {\n    setLoadedAt(location);\n  });\n\n  useEffect(() => {\n    if (loadedEventEmitted) storyLoadedEmitted.current.resolve();\n  }, [loadedEventEmitted]);\n\n  useEffect(() => {\n    setLastEmittedRouteMatches(matches);\n\n    const id = setTimeout(() => {\n      if (!loadedEventEmitted) {\n        setLoadedEventEmitted(true);\n        channel.emit(EVENTS.STORY_LOADED, buildEventData(EVENTS.STORY_LOADED))\n      }\n    }, 0);\n\n    return () => clearTimeout(id);\n  }, [loadedEventEmitted, matches]);\n\n  useEffect(() => {\n    if (loadedAt !== undefined && loadedAt.key !== location.key) {\n      storyLoadedEmitted.current.promise.then(() => {\n        channel.emit(EVENTS.NAVIGATION, buildEventData(EVENTS.NAVIGATION));\n      })\n    }\n  }, [location]);\n\n  useEffect(() => {\n    if (loadedEventEmitted && (matches.length > lastEmittedRouteMatches.length)) {\n      setLastEmittedRouteMatches(matches);\n      channel.emit(EVENTS.ROUTE_MATCHES, buildEventData(EVENTS.ROUTE_MATCHES));\n    }\n  }, [matches])\n\n  return <>{children}</>;\n}\n","export const ADDON_ID = \"storybook/react-router-v6\";\nexport const PANEL_ID = `${ADDON_ID}/panel`;\nexport const PARAM_KEY = `reactRouter`;\n\nexport const EVENTS = {\n  CLEAR: `${ADDON_ID}/clear`,\n  NAVIGATION: `${ADDON_ID}/navigation`,\n  STORY_LOADED: `${ADDON_ID}/story-loaded`,\n  ROUTE_MATCHES: `${ADDON_ID}/route-matches`,\n  ACTION_INVOKED: `${ADDON_ID}/action_invoked`,\n  ACTION_SETTLED: `${ADDON_ID}/action_settled`,\n  LOADER_INVOKED: `${ADDON_ID}/loader_invoked`,\n  LOADER_SETTLED: `${ADDON_ID}/loader_settled`,\n} as const;\n","import {NavigationEventData, NavigationEventName, RouteMatchesData} from \"../typings\";\nimport {EVENTS} from \"../constants\";\nimport {useLocation, useNavigationType, useParams, useSearchParams} from \"react-router-dom\";\nimport {useCurrentUrl} from \"./useCurrentUrl\";\nimport {useDeepRouteMatches} from \"./useDeepRouteMatches\";\nimport {useRef} from \"react\";\n\nexport const useNavigationEventBuilder = () => {\n  const eventCount = useRef(0);\n  const location = useLocation();\n  const params = useParams();\n  const [search] = useSearchParams();\n  const navigationType = useNavigationType();\n  const matches = useDeepRouteMatches();\n\n  const searchParams: Record<string, string> = {};\n\n  search.forEach((value, key) => {\n    searchParams[key] = value;\n  })\n\n  const currentUrl = useCurrentUrl();\n\n  const matchesData: RouteMatchesData = matches.map(routeMatch => ([\n    routeMatch.route.path,\n    routeMatch.params,\n  ]));\n\n  return (eventName: NavigationEventName) => {\n    switch (eventName) {\n      case EVENTS.STORY_LOADED: {\n        const eventData: NavigationEventData[typeof eventName] = {\n          url: currentUrl,\n          path: location.pathname,\n          routeParams: params,\n          searchParams,\n          routeMatches: matchesData,\n          hash: location.hash,\n          routeState: location.state,\n        };\n\n        return {\n          key: `${EVENTS.STORY_LOADED}_${eventCount.current++}`,\n          type: EVENTS.STORY_LOADED,\n          data: eventData\n        };\n      }\n\n      case EVENTS.NAVIGATION: {\n        const eventData: NavigationEventData[typeof eventName] = {\n          url: currentUrl,\n          path: location.pathname,\n          routeParams: params,\n          searchParams,\n          hash: location.hash,\n          routeState: location.state,\n          routeMatches: matchesData,\n          navigationType,\n        };\n\n        return {\n          key: `${EVENTS.NAVIGATION}_${eventCount.current++}`,\n          type: EVENTS.NAVIGATION,\n          data: eventData\n        };\n      }\n\n      case EVENTS.ROUTE_MATCHES: {\n        return {\n          key: `${EVENTS.ROUTE_MATCHES}_${eventCount.current++}`,\n          type: EVENTS.ROUTE_MATCHES,\n          data: { matches: matchesData }\n        };\n      }\n    }\n  }\n}\n","import {useLocation} from \"react-router-dom\";\n\nexport const useCurrentUrl = () => {\n  const location = useLocation();\n  return `${location.pathname}${location.search}${location.hash}`;\n}\n","import React from \"react\";\nimport {DeepRouteMatchesContext} from \"../contexts/DeepRouteMatches\";\n\nexport const useDeepRouteMatches = () => {\n  return React.useContext(DeepRouteMatchesContext);\n}\n","import React from \"react\";\nimport {RouteMatch} from \"react-router-dom\";\n\nexport const DeepRouteMatchesContext = React.createContext<RouteMatch[]>([]);\n","import { generatePath } from \"react-router-dom\";\n\nexport const generateAppUrl = (\n  path: Parameters<typeof generatePath>[0],\n  params?: Parameters<typeof generatePath>[1],\n  search?: ConstructorParameters<typeof URLSearchParams>[0],\n  hash?: string,\n) => {\n  const pathname = generatePath(path, params);\n  const queryString = search && Object.keys(search).length > 0 ? `?${new URLSearchParams(search).toString()}` : '';\n  const hashString = hash ? hash : '';\n\n  return `${pathname}${queryString}${hashString}`;\n}\n\n\nexport type Deferred<T> = {\n  promise: Promise<T>;\n  resolve: ((value: T | PromiseLike<T>) => void);\n  reject: ((reason?: any) => void);\n}\n\nexport function defer<T = void>(): Deferred<T> {\n  const deferred: Partial<Deferred<T>> = {};\n\n  deferred.promise = new Promise<T>((resolve, reject) => {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n\n  return deferred as Deferred<T>;\n}\n\nexport type FileSummary = { filename: string; filesize: number; filetype: string; };\n\nexport function getFormDataSummary(formData: FormData): Record<string, string | FileSummary> {\n  const data: Record<string, string | FileSummary> = {};\n\n  formData.forEach((value, key) => {\n    if (value instanceof File) {\n      data[key] = {\n        filename: value.name,\n        filesize: value.size,\n        filetype: value.type,\n      };\n      return;\n    }\n\n    data[key] = value;\n  });\n\n  return data;\n}\n\nexport async function getHumanReadableBody(request: Request) {\n  const requestClone = request.clone();\n  const contentTypeHeader = requestClone.headers.get('content-type') || '';\n\n  let humanReadableBody: string | Record<string, string | FileSummary> | undefined = undefined;\n  let requestBodySize: number;\n\n  switch (true) {\n    case contentTypeHeader.startsWith('text'): humanReadableBody = await requestClone.text(); break;\n    case contentTypeHeader.startsWith('application/json'): humanReadableBody = await requestClone.json(); break;\n    case contentTypeHeader.startsWith('multipart/form-data'):\n    case contentTypeHeader.startsWith('application/x-www-form-urlencoded'): {\n      humanReadableBody = getFormDataSummary(await requestClone.formData());\n      break\n    }\n    default: requestBodySize = await requestClone.arrayBuffer().then(b => b.byteLength);\n  }\n\n  return humanReadableBody;\n}","import React, {PropsWithChildren, useLayoutEffect, useRef, useState} from 'react';\nimport {InitialEntry} from \"@remix-run/router\";\nimport {createMemoryRouter, createRoutesFromElements, generatePath, RouterProvider} from \"react-router-dom\";\nimport {StoryRouterProps} from \"./StoryRouteTree\";\nimport {addons} from \"@storybook/preview-api\";\nimport {STORY_ARGS_UPDATED} from \"@storybook/core-events\";\n\nexport const StoryRouter = ({\n  children,\n  routePath,\n  routeParams,\n  searchParams,\n  routeState,\n  browserPath: userBrowserPath,\n  hydrationData,\n}: PropsWithChildren<StoryRouterProps>) => {\n  const channel = addons.getChannel();\n  const [router, setRouter] = useState<ReturnType<typeof createMemoryRouter>>();\n  const [storyMutations, setStoryMutations] = useState(0);\n  const routeStateRef = useRef<InitialEntry>();\n\n  channel.on(STORY_ARGS_UPDATED, () => {\n    setStoryMutations(prev => prev + 1);\n  });\n\n  useLayoutEffect(() => {\n    const generatedPath = generatePath(routePath || '', routeParams);\n    const queryString = new URLSearchParams(searchParams).toString();\n    const search = queryString.length > 0 ? `?${queryString}` : '';\n\n    const initialEntry: InitialEntry = { search, state: routeState };\n    if (userBrowserPath !== undefined) initialEntry['pathname'] = userBrowserPath;\n    if (userBrowserPath === undefined && generatedPath !== '') initialEntry['pathname'] = generatedPath;\n\n    if (routeStateRef.current !== undefined) {\n      Object.assign(initialEntry, routeStateRef.current);\n    }\n\n    const routes = createRoutesFromElements(children);\n\n    const memoryRouter = createMemoryRouter(routes, {\n      initialEntries: [initialEntry],\n      hydrationData,\n    });\n\n    memoryRouter.subscribe(nextState => {\n      routeStateRef.current = nextState.location;\n    });\n\n    setRouter(memoryRouter);\n  }, [storyMutations]);\n\n  if (router === undefined) return null;\n\n  return <RouterProvider router={router} fallbackElement={<Fallback />} />;\n}\n\nexport function Fallback() {\n  return <p>Performing initial data load</p>;\n}","import {DataEventArgs, DataEventName, RouterEvent} from \"../typings\";\nimport {EVENTS} from \"../constants\";\nimport {getHumanReadableBody} from \"../utils\";\n\nexport const useDataEventBuilder = () => {\n\n  return async (eventName: DataEventName, eventArgs?: DataEventArgs[keyof DataEventArgs]): Promise<RouterEvent<any>> => {\n    switch (eventName) {\n      case EVENTS.ACTION_INVOKED: {\n        const { request, params, context } = eventArgs as DataEventArgs[typeof eventName];\n\n        const requestData = {\n          url: request.url,\n          method: request.method,\n          body: await getHumanReadableBody(request),\n        }\n\n        return {\n          type: EVENTS.ACTION_INVOKED,\n          data: {\n            params,\n            request: requestData,\n            context,\n          },\n        };\n      }\n\n      case EVENTS.ACTION_SETTLED: {\n        return {\n          type: EVENTS.ACTION_SETTLED,\n          data: eventArgs,\n        };\n      }\n\n      case EVENTS.LOADER_INVOKED: {\n        const { request, params, context } = eventArgs as DataEventArgs[typeof eventName];\n\n        const requestData = {\n          url: request.url,\n          method: request.method,\n          body: getHumanReadableBody(request),\n        }\n\n        return {\n          type: EVENTS.LOADER_INVOKED,\n          data: {\n            params,\n            request: requestData,\n            context,\n          },\n        };\n      }\n\n      case EVENTS.LOADER_SETTLED: {\n        return {\n          type: EVENTS.LOADER_SETTLED,\n          data: eventArgs,\n        };\n      }\n    }\n  }\n}\n"]}