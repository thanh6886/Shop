{"version":3,"sources":["../src/manager.tsx","../src/constants.ts","../src/components/Panel.tsx","../src/components/PanelContent.tsx","../src/components/RouterEventDisplayWrapper.tsx","../src/components/ThemedInspector.tsx","../src/components/InspectorContainer.tsx"],"names":["React","addons","types","ADDON_ID","PANEL_ID","PARAM_KEY","EVENTS","useRef","useState","AddonPanel","Fragment","styled","ActionBar","ScrollArea","RouterEventDisplayWrapper","withTheme","ObjectInspector","ThemedInspector","theme","props","InspectorContainer","PatchedScrollArea","PanelContent","navigationEvents","onClear","Wrapper","event","humanReadableEventNames","children","title","useChannel","STORY_CHANGED","Panel","eventCount","setNavigationEvents","prev","clear","useEffect","api","badgeCount","setBadgeCount","incrementBadgeCount","previous","clearBadgeCount","viewMode","active","key"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {addons, types} from \"@storybook/manager-api\";\n\nimport {ADDON_ID, EVENTS, PANEL_ID, PARAM_KEY} from \"./constants\";\nimport {Panel} from \"./components/Panel\";\nimport {useEffect, useState} from \"react\";\nimport { STORY_CHANGED } from \"@storybook/core-events\";\n\naddons.register(ADDON_ID, (api) => {\n  addons.add(PANEL_ID, {\n    type: types.PANEL,\n    paramKey: PARAM_KEY,\n    title: () => {\n      const [badgeCount, setBadgeCount] = useState(0);\n      const incrementBadgeCount = () => setBadgeCount((previous) => previous + 1);\n      const clearBadgeCount = () => setBadgeCount(0);\n\n      useEffect(() => {\n        api.on(STORY_CHANGED, clearBadgeCount);\n        api.on(EVENTS.ROUTE_MATCHES, incrementBadgeCount);\n        api.on(EVENTS.NAVIGATION, incrementBadgeCount);\n        api.on(EVENTS.ACTION_INVOKED, incrementBadgeCount);\n        api.on(EVENTS.ACTION_SETTLED, incrementBadgeCount);\n        api.on(EVENTS.LOADER_INVOKED, incrementBadgeCount);\n        api.on(EVENTS.LOADER_SETTLED, incrementBadgeCount);\n        api.on(EVENTS.CLEAR, clearBadgeCount);\n\n        return () => {\n          api.off(STORY_CHANGED, clearBadgeCount);\n          api.off(EVENTS.ROUTE_MATCHES, incrementBadgeCount);\n          api.off(EVENTS.NAVIGATION, incrementBadgeCount);\n          api.off(EVENTS.ACTION_INVOKED, incrementBadgeCount);\n          api.off(EVENTS.ACTION_SETTLED, incrementBadgeCount);\n          api.off(EVENTS.LOADER_INVOKED, incrementBadgeCount);\n          api.off(EVENTS.LOADER_SETTLED, incrementBadgeCount);\n          api.off(EVENTS.CLEAR, clearBadgeCount);\n        };\n      });\n\n      const suffix = badgeCount === 0 ? '' : ` (${badgeCount})`;\n      return `React Router${suffix}`;\n    },\n    match: ({ viewMode }) => viewMode === \"story\",\n    render: ({ active, key }) => <Panel active={active || false} key={key} api={api} />,\n  });\n});\n","export const ADDON_ID = \"storybook/react-router-v6\";\nexport const PANEL_ID = `${ADDON_ID}/panel`;\nexport const PARAM_KEY = `reactRouter`;\n\nexport const EVENTS = {\n  CLEAR: `${ADDON_ID}/clear`,\n  NAVIGATION: `${ADDON_ID}/navigation`,\n  STORY_LOADED: `${ADDON_ID}/story-loaded`,\n  ROUTE_MATCHES: `${ADDON_ID}/route-matches`,\n  ACTION_INVOKED: `${ADDON_ID}/action_invoked`,\n  ACTION_SETTLED: `${ADDON_ID}/action_settled`,\n  LOADER_INVOKED: `${ADDON_ID}/loader_invoked`,\n  LOADER_SETTLED: `${ADDON_ID}/loader_settled`,\n} as const;\n","import React, {useRef, useState} from \"react\";\nimport {AddonPanel} from \"@storybook/components\";\nimport {PanelContent, PanelContentProps} from \"./PanelContent\";\nimport {API, useChannel} from '@storybook/manager-api';\nimport {EVENTS} from \"../constants\";\nimport {STORY_CHANGED} from \"@storybook/core-events\";\n\ninterface PanelProps {\n  active: boolean;\n  api: API;\n}\n\nexport const Panel: React.FC<PanelProps> = (props) => {\n  const eventCount = useRef(0);\n  const [navigationEvents, setNavigationEvents] = useState<PanelContentProps['navigationEvents']>([]);\n\n  useChannel({\n    [EVENTS.ROUTE_MATCHES]: (event) => {\n      setNavigationEvents(prev => [...prev, {...event, key: eventCount.current++ }]);\n    },\n    [EVENTS.NAVIGATION]: (event) => {\n      setNavigationEvents(prev => [...prev, {...event, key: eventCount.current++ }]);\n    },\n    [EVENTS.STORY_LOADED]: (event) => {\n      setNavigationEvents(prev => [...prev, {...event, key: eventCount.current++ }]);\n    },\n    [EVENTS.ACTION_INVOKED]: (event) => {\n      setNavigationEvents(prev => [...prev, {...event, key: eventCount.current++ }]);\n    },\n    [EVENTS.ACTION_SETTLED]: (event) => {\n      setNavigationEvents(prev => [...prev, {...event, key: eventCount.current++ }]);\n    },\n    [EVENTS.LOADER_INVOKED]: (event) => {\n      setNavigationEvents(prev => [...prev, {...event, key: eventCount.current++ }]);\n    },\n    [EVENTS.LOADER_SETTLED]: (event) => {\n      setNavigationEvents(prev => [...prev, {...event, key: eventCount.current++ }]);\n    },\n    [STORY_CHANGED]: () => {\n      setNavigationEvents([]);\n    }\n  });\n\n  const clear = () => {\n    props.api.emit(EVENTS.CLEAR);\n    setNavigationEvents([]);\n  }\n\n  return (\n    <AddonPanel {...props}>\n      <PanelContent navigationEvents={navigationEvents} onClear={clear} />\n    </AddonPanel>\n  );\n};\n","import React, {Fragment, PropsWithChildren} from \"react\";\nimport {styled} from '@storybook/theming';\nimport {EVENTS} from \"../constants\";\nimport {ActionBar, ScrollArea} from \"@storybook/components\";\nimport {RouterEventDisplayWrapper} from \"./RouterEventDisplayWrapper\";\nimport {ThemedInspector} from \"./ThemedInspector\";\nimport {InspectorContainer} from \"./InspectorContainer\";\nimport {DataEventName, NavigationEventName, RouterEvent} from \"../typings\";\nimport {FCC} from \"../fixes\";\n\nexport type PanelContentProps = {\n  navigationEvents: Array<RouterEvent & { key: string }>;\n  onClear: () => void;\n}\n\nexport type ScrollAreaProps = PropsWithChildren<{\n  horizontal?: boolean;\n  vertical?: boolean;\n  className?: string;\n  title: string;\n}>;\nconst PatchedScrollArea = ScrollArea as FCC<ScrollAreaProps>;\n\n\nexport const PanelContent: FCC<PanelContentProps> = ({navigationEvents, onClear}) => {\n  return (\n    <Fragment>\n      <Wrapper title=\"reactRouterLogger\">\n        {navigationEvents.map(event => {\n          return (\n            <RouterEventDisplayWrapper key={event.key}>\n              <InspectorContainer>\n                <ThemedInspector\n                  name={humanReadableEventNames[event.type]}\n                  data={event.data}\n                  showNonenumerable={false}\n                  sortObjectKeys={false}\n                  expandPaths={[\n                    '$.routeParams',\n                    '$.searchParams',\n                    '$.routeMatches.*',\n                    '$.routeMatches.*.*',\n                    '$.matches',\n                    '$.matches.*',\n                    '$.matches.*.*',\n                  ]}\n                />\n              </InspectorContainer>\n            </RouterEventDisplayWrapper>\n          )\n        })}\n      </Wrapper>\n\n      <ActionBar actionItems={[{title: 'Clear', onClick: onClear}]}/>\n    </Fragment>\n  )\n}\n\nexport const humanReadableEventNames: Record<NavigationEventName | DataEventName, string> = {\n  [EVENTS.NAVIGATION]: \"Navigate\",\n  [EVENTS.STORY_LOADED]: \"Story rendered\",\n  [EVENTS.ROUTE_MATCHES]: \"New route matches\",\n  [EVENTS.ACTION_INVOKED]: \"Action invoked\",\n  [EVENTS.ACTION_SETTLED]: \"Action settled\",\n  [EVENTS.LOADER_INVOKED]: \"Loader invoked\",\n  [EVENTS.LOADER_SETTLED]: \"Loader settled\",\n};\n\nexport const Wrapper = styled(({children, title}: ScrollAreaProps) => (\n  <PatchedScrollArea horizontal vertical title={title}>\n    {children}\n  </PatchedScrollArea>\n))({\n  margin: 0,\n  padding: '10px 5px 20px',\n});\nWrapper.displayName = \"Wrapper\";\n","import { styled } from '@storybook/theming';\n\nexport const RouterEventDisplayWrapper = styled.div({\n  display: 'flex',\n  padding: 0,\n  borderLeft: '5px solid transparent',\n  borderBottom: '1px solid transparent',\n  transition: 'all 0.1s',\n  alignItems: 'flex-start',\n  whiteSpace: 'pre',\n});\n","import React from 'react';\nimport { withTheme } from '@storybook/theming';\nimport type { Theme } from '@storybook/theming';\nimport { ObjectInspector } from \"react-inspector\";\n\ninterface InspectorProps {\n  theme: Theme;\n  sortObjectKeys?: boolean;\n  showNonenumerable?: boolean;\n  name: any;\n  data: any;\n  depth?: number;\n  expandPaths?: string | string[];\n}\n\nexport const ThemedInspector = withTheme(({ theme, ...props }: InspectorProps) => (\n  <ObjectInspector theme={theme.addonActionsTheme || 'chromeLight'} {...props} />\n));\n","import { styled } from '@storybook/theming';\n\nexport const InspectorContainer = styled.div({\n  flex: 1,\n  padding: '0 0 0 5px',\n});\n"]}